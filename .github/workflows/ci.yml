name: CI

permissions:
  contents: read
  security-events: write
  pull-requests: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.90.5
        with:
          path: ./
          git-url: file://.
          extra_args: --debug --only-verified

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.21

      - name: Install dependencies
        run: bun install

      - name: Check formatting
        run: bun run format

      - name: Check for formatting changes
        run: |
          if [ -n "$(git diff --name-only)" ]; then
            echo "❌ Code formatting issues found. Please run 'bun run format' locally."
            git diff --name-only
            exit 1
          else
            echo "✅ Code is properly formatted"
          fi

      - name: Run linter
        run: bun run lint

      - name: Run typecheck
        run: bun run typecheck

      - name: Run build
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Security audit
        run: |
          echo "🔒 Running security audit..."
          bun install --frozen-lockfile
          if command -v npm &> /dev/null; then
            npm audit --audit-level=moderate || true
          fi
          echo "✅ Security audit completed"

  test-matrix:
    name: Test Matrix (Node.js ${{ matrix.node-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: quality

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.21

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test

      - name: Build project
        run: bun run build

      - name: Test CLI functionality
        run: |
          bun run start chat --help
          bun run start providers
